# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: testprotofile.proto

import sys
_b=sys.version_info[0]<3 and (lambda x:x) or (lambda x:x.encode('latin1'))
from google.protobuf import descriptor as _descriptor
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()




DESCRIPTOR = _descriptor.FileDescriptor(
  name='testprotofile.proto',
  package='',
  syntax='proto3',
  serialized_options=None,
  serialized_pb=_b('\n\x13testprotofile.proto\"\x1b\n\x0btestRequest\x12\x0c\n\x04mark\x18\x01 \x01(\t\"$\n\x0ctestResponse\x12\x14\n\x0cmarkResponse\x18\x01 \x01(\t26\n\x0btestService\x12\'\n\x08testSend\x12\x0c.testRequest\x1a\r.testResponseb\x06proto3')
)




_TESTREQUEST = _descriptor.Descriptor(
  name='testRequest',
  full_name='testRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='mark', full_name='testRequest.mark', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=23,
  serialized_end=50,
)


_TESTRESPONSE = _descriptor.Descriptor(
  name='testResponse',
  full_name='testResponse',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='markResponse', full_name='testResponse.markResponse', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=52,
  serialized_end=88,
)

DESCRIPTOR.message_types_by_name['testRequest'] = _TESTREQUEST
DESCRIPTOR.message_types_by_name['testResponse'] = _TESTRESPONSE
_sym_db.RegisterFileDescriptor(DESCRIPTOR)

testRequest = _reflection.GeneratedProtocolMessageType('testRequest', (_message.Message,), dict(
  DESCRIPTOR = _TESTREQUEST,
  __module__ = 'testprotofile_pb2'
  # @@protoc_insertion_point(class_scope:testRequest)
  ))
_sym_db.RegisterMessage(testRequest)

testResponse = _reflection.GeneratedProtocolMessageType('testResponse', (_message.Message,), dict(
  DESCRIPTOR = _TESTRESPONSE,
  __module__ = 'testprotofile_pb2'
  # @@protoc_insertion_point(class_scope:testResponse)
  ))
_sym_db.RegisterMessage(testResponse)



_TESTSERVICE = _descriptor.ServiceDescriptor(
  name='testService',
  full_name='testService',
  file=DESCRIPTOR,
  index=0,
  serialized_options=None,
  serialized_start=90,
  serialized_end=144,
  methods=[
  _descriptor.MethodDescriptor(
    name='testSend',
    full_name='testService.testSend',
    index=0,
    containing_service=None,
    input_type=_TESTREQUEST,
    output_type=_TESTRESPONSE,
    serialized_options=None,
  ),
])
_sym_db.RegisterServiceDescriptor(_TESTSERVICE)

DESCRIPTOR.services_by_name['testService'] = _TESTSERVICE

# @@protoc_insertion_point(module_scope)
